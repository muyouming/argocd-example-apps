# ---
# # Source: superset/templates/deployment-worker.yaml
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: local-superset-worker
#   namespace: default
#   labels:
#     app: superset-worker
#     chart: superset-0.10.5
#     release: local
#     heritage: Helm
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: superset-worker
#       release: local
#   template:
#     metadata:
#       annotations:
#         checksum/superset_config.py: 9eaa8f3a1f38833081d5781146c652f8ec3dfb6e5588e7bc0ddb5bb986292d9a
#         checksum/connections: bca800c8f10c8d7ae9b76ceb31ee3102f06f5289b3aa18550ce875413484a11e
#         checksum/extraConfigs: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
#         checksum/extraSecrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
#         checksum/extraSecretEnv: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
#         checksum/configOverrides: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
#         checksum/configOverridesFiles: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
#       labels:
#         app: superset-worker
#         release: local
#     spec:
#       securityContext:
#         runAsUser: 0
#       initContainers:
#       - command:
#         - /bin/sh
#         - -c
#         - dockerize -wait "tcp://$DB_HOST:$DB_PORT" -wait "tcp://$REDIS_HOST:$REDIS_PORT"
#           -timeout 120s
#         envFrom:
#         - secretRef:
#             name: 'local-superset-env'
#         image: 'apache/superset:dockerize'
#         imagePullPolicy: 'IfNotPresent'
#         name: wait-for-postgres-redis
#       containers:
#         - name: superset
#           image: "apachesuperset.docker.scarf.sh/apache/superset:2.1.0"
#           imagePullPolicy: IfNotPresent
#           command: ["/bin/sh","-c",". /app/pythonpath/superset_bootstrap.sh; celery --app=superset.tasks.celery_app:app worker"]
#           env:
#             - name: "SUPERSET_PORT"
#               value: "8088"
#           envFrom:
#             - secretRef:
#                 name: "local-superset-env"
#           volumeMounts:
#             - name: superset-config
#               mountPath: "/app/pythonpath"
#               readOnly: true
#           livenessProbe:
#             exec:
#               command:
#               - sh
#               - -c
#               - celery -A superset.tasks.celery_app:app inspect ping -d celery@$HOSTNAME
#             failureThreshold: 3
#             initialDelaySeconds: 120
#             periodSeconds: 60
#             successThreshold: 1
#             timeoutSeconds: 60
#           resources:
#             {}
#       volumes:
#         - name: superset-config
#           secret:
#             secretName: local-superset-config
